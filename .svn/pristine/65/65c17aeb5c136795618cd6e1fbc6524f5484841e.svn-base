<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.contactsImprove.dao.api.UserMerchantDao" >
  <resultMap id="BaseResultMap" type="com.contactsImprove.entity.api.UserMerchant" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="private_key" property="privateKey" jdbcType="VARCHAR" />
    <result column="public_key" property="publicKey" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ext" property="ext" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, private_key, public_key, status, create_time, ext, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_merchant
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_merchant
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.contactsImprove.entity.api.UserMerchant" >
    insert into user_merchant (user_id, private_key, public_key, 
      status, create_time, ext, 
      remark)
    values (#{userId,jdbcType=BIGINT}, #{privateKey,jdbcType=VARCHAR}, #{publicKey,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{ext,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.contactsImprove.entity.api.UserMerchant" >
    insert into user_merchant
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="privateKey != null" >
        private_key,
      </if>
      <if test="publicKey != null" >
        public_key,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="ext != null" >
        ext,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="privateKey != null" >
        #{privateKey,jdbcType=VARCHAR},
      </if>
      <if test="publicKey != null" >
        #{publicKey,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ext != null" >
        #{ext,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.contactsImprove.entity.api.UserMerchant" >
    update user_merchant
    <set >
      <if test="privateKey != null" >
        private_key = #{privateKey,jdbcType=VARCHAR},
      </if>
      <if test="publicKey != null" >
        public_key = #{publicKey,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ext != null" >
        ext = #{ext,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.contactsImprove.entity.api.UserMerchant" >
    update user_merchant
    set private_key = #{privateKey,jdbcType=VARCHAR},
      public_key = #{publicKey,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      ext = #{ext,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>