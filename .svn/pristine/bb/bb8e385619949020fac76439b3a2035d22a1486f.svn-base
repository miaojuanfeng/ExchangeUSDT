package com.contactsImprove.service.api.impl;

import java.text.SimpleDateFormat;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.contactsImprove.dao.api.UsersDao;
import com.contactsImprove.entity.api.Users;
import com.contactsImprove.service.api.UsersService;

@Service
public class UsersServiceImpl implements UsersService{

	@Autowired
	private UsersDao usersDao;

	@Override
	public Users selectByPhoneNumber(String phoneNumber) {
		// TODO Auto-generated method stub
		return usersDao.selectByPhoneNumber(phoneNumber);
	}

	@Override
	public int insertSelective(Users record) {
		// TODO Auto-generated method stub
		return usersDao.insertSelective(record);
	}

	@Override
	public Users selectByPrimaryKey(Long userId) {
		// TODO Auto-generated method stub
		return usersDao.selectByPrimaryKey(userId);
	}

	@Override
	public int updateByPrimaryKeySelective(Users record) {
		// TODO Auto-generated method stub
		return usersDao.updateByPrimaryKeySelective(record);
	}
	
	@Override
	public List<Users> selectUsersByMerchantList(Users record) {
		StringBuffer queryStr = new StringBuffer("SELECT u.*, m.private_key, m.public_key, m.create_time, w.currency_number, w.freeze_number, w.wallet_address FROM users u, user_merchant m, user_wallet w WHERE type = 1 AND u.user_id = m.user_id AND u.user_id = w.user_id");
		
		if(record.getUserName() != null && record.getUserName() != "") {
			queryStr.append(" and user_name like" + "'%"+record.getUserName()+"%'");
		} 
		
		if(record.getPhoneNumber() != null && record.getPhoneNumber() != "") {
			queryStr.append(" and phone_number like" + "'%"+record.getPhoneNumber()+"%'");
		} 
		
		if(record.getStatus() != null) {
			queryStr.append(" and u.status =" + record.getStatus());
		}
		
		if(record.getUserMerchant().getCreateTime() != null) {
			String dateTime = new SimpleDateFormat("yyyy-MM-dd").format(record.getUserMerchant().getCreateTime());
			queryStr.append(" and m.create_time like" + "'%"+ dateTime +"%'");
		} 
		record.setQueryStr(queryStr.toString());
		return usersDao.selectUsersByList(record);
	}

	@Override
	public List<Users> selectUsersByType(Users record) {
		StringBuffer queryStr = new StringBuffer("SELECT u.*,  w.currency_number, w.freeze_number, w.wallet_address FROM users u, user_wallet w WHERE type = "+record.getType()+" AND u.user_id = w.user_id");
		
		if(record.getUserName() != null && record.getUserName() != "") {
			queryStr.append(" and user_name like" + "'%"+record.getUserName()+"%'");
		} 
		
		if(record.getPhoneNumber() != null && record.getPhoneNumber() != "") {
			queryStr.append(" and phone_number like" + "'%"+record.getPhoneNumber()+"%'");
		} 
		
		if(record.getStatus() != null) {
			queryStr.append(" and u.status = " +record.getStatus());
		}
		record.setQueryStr(queryStr.toString());
		return usersDao.selectUsersByList(record);
	}

	@Override
	public List<Users> selectUsersByStatus(Users record) {
		StringBuffer queryStr = new StringBuffer("SELECT * FROM users WHERE status = "+record.getStatus());
		
		if(record.getUserName() != null && record.getUserName() != "") {
			queryStr.append(" and user_name like" + "'%"+record.getUserName()+"%'");
		} 
		
		if(record.getPhoneNumber() != null && record.getPhoneNumber() != "") {
			queryStr.append(" and phone_number like" + "'%"+record.getPhoneNumber()+"%'");
		} 
		
		record.setQueryStr(queryStr.toString());
		return usersDao.selectUsersByList(record);
	}
}
