package com.contactsImprove.controller.admin;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.IncorrectCredentialsException;
import org.apache.shiro.authc.UnknownAccountException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.session.SessionException;
import org.apache.shiro.subject.Subject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import com.alibaba.druid.util.StringUtils;
import com.contactsImprove.constant.ResponseCode.StatusCode;
import com.contactsImprove.constant.SystemConst;
import com.contactsImprove.entity.admin.AdminUser;
import com.contactsImprove.service.admin.AdminUserService;
import com.contactsImprove.utils.IpUtil;
import com.contactsImprove.utils.LoggerUtil;

@Controller
@RequestMapping("/admin/login")
public class LoginController {
	
	@Autowired
	private AdminUserService adminUserService;
	
	@RequestMapping(value = "/loginView")
	public String loginView() {
		return "login";
	}
	
	@RequestMapping(value = "/index")
	public String index() {
		return "index";
	}
	
	/**
	 * 后台登录
	 * 
	 * @param adminUser
	 * @param model
	 * @param session
	 * @return
	 */
	@RequestMapping(value = "/login")
	@ResponseBody
	public Map<String, Object> login(AdminUser adminUser,HttpSession session,
			HttpServletRequest request) {
		Map<String, Object> resultMap = new HashMap<String, Object>();
		if (StringUtils.isEmpty(adminUser.getUserName())) {
			resultMap.put("code", StatusCode._203.getStatus());
			resultMap.put("msg", StatusCode._203.getMsg());
			return resultMap;
		}
		
		if(StringUtils.isEmpty(adminUser.getPassword())) {
			resultMap.put("code", StatusCode._204.getStatus());
			resultMap.put("msg", StatusCode._204.getMsg());
			return resultMap;
		}
		
		UsernamePasswordToken token = new UsernamePasswordToken(adminUser.getUserName(),
				adminUser.getPassword());
		try {
			SecurityUtils.getSubject().login(token);
			AdminUser user = (AdminUser) SecurityUtils.getSubject().getPrincipal();
			
			if(user.getIsValid() == 0) {
				resultMap.put("code", StatusCode._401.getStatus());
				resultMap.put("msg", StatusCode._401.getMsg());
				return resultMap;
			}
			
			AdminUser au = new AdminUser();
			au.setId(user.getId());
			au.setIp(IpUtil.getIp(request));
			au.setLoginTime(new Date());
			adminUserService.updateByPrimaryKeySelective(au);
			
			session.setAttribute("user", user);
			resultMap.put("code", StatusCode._200.getStatus());
			resultMap.put("msg", StatusCode._200.getMsg());
			return resultMap;
		} catch (UnknownAccountException ue) {
			resultMap.put("code", StatusCode._203.getStatus());
			resultMap.put("msg", StatusCode._203.getMsg());
			return resultMap;
		} catch (IncorrectCredentialsException ie) {
			resultMap.put("code", StatusCode._204.getStatus());
			resultMap.put("msg", StatusCode._204.getMsg());
			return resultMap;
		} catch (Exception e) {
			LoggerUtil.error(e.toString(), e);
			resultMap.put("code", StatusCode._500.getStatus());
			resultMap.put("msg", StatusCode._500.getMsg());
			return resultMap;
		}
	}
	
	/**
	 * 退出
	 * 
	 * @return
	 */
	@RequestMapping(value = "/loginout")
	public void loginout(HttpServletRequest request,HttpServletResponse response) {
		Subject subject = SecurityUtils.getSubject();
		try {
			if (subject.isAuthenticated()) {
				subject.logout();
			}
		} catch (SessionException e) {
			LoggerUtil.error(e.getMessage(),e);
		}
		response.setStatus(302);
		String scheme="http";
		if(request.getServerPort()==SystemConst.sslPort) {
			scheme="https";
		}
		String redirectUrl=scheme+"://"+request.getServerName()+":"+request.getServerPort()+request.getContextPath()+"/admin/login/loginView";
		response.setHeader("location",redirectUrl );
	}

}
