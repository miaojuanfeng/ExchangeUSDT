<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.contactsImprove.dao.api.UserWalletDao" >
  <resultMap id="BaseResultMap" type="com.contactsImprove.entity.api.UserWallet" >
    <id column="wallet_id" property="walletId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="pay_password" property="payPassword" jdbcType="VARCHAR" />
    <result column="currency_type" property="currencyType" jdbcType="VARCHAR" />
    <result column="currency_number" property="currencyNumber" jdbcType="DECIMAL" />
    <result column="freeze_number" property="freezeNumber" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="wallet_address" property="walletAddress" jdbcType="VARCHAR" />
    <result column="reserve" property="reserve" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    wallet_id, user_id, pay_password, currency_type, currency_number, freeze_number, 
    status, wallet_address, reserve
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_wallet
    where wallet_id = #{walletId,jdbcType=BIGINT}
  </select>
  <select id="findByLock" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from user_wallet
    where user_id = #{userId,jdbcType=BIGINT} and currency_type=#{currencyType,jdbcType=VARCHAR} for update
  </select>  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_wallet
    where wallet_id = #{walletId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.contactsImprove.entity.api.UserWallet" >
    insert into user_wallet (wallet_id, user_id, pay_password, 
      currency_type, currency_number, freeze_number, 
      status, wallet_address, reserve
      )
    values (#{walletId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{payPassword,jdbcType=VARCHAR}, 
      #{currencyType,jdbcType=VARCHAR}, #{currencyNumber,jdbcType=DECIMAL}, #{freezeNumber,jdbcType=DECIMAL}, 
      #{status,jdbcType=TINYINT}, #{walletAddress,jdbcType=VARCHAR}, #{reserve,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.contactsImprove.entity.api.UserWallet" >
    insert into user_wallet
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="walletId != null" >
        wallet_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="payPassword != null" >
        pay_password,
      </if>
      <if test="currencyType != null" >
        currency_type,
      </if>
      <if test="currencyNumber != null" >
        currency_number,
      </if>
      <if test="freezeNumber != null" >
        freeze_number,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="walletAddress != null" >
        wallet_address,
      </if>
      <if test="reserve != null" >
        reserve,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="walletId != null" >
        #{walletId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="payPassword != null" >
        #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="currencyType != null" >
        #{currencyType,jdbcType=VARCHAR},
      </if>
      <if test="currencyNumber != null" >
        #{currencyNumber,jdbcType=DECIMAL},
      </if>
      <if test="freezeNumber != null" >
        #{freezeNumber,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="walletAddress != null" >
        #{walletAddress,jdbcType=VARCHAR},
      </if>
      <if test="reserve != null" >
        #{reserve,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.contactsImprove.entity.api.UserWallet" >
    update user_wallet
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="payPassword != null" >
        pay_password = #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="currencyType != null" >
        currency_type = #{currencyType,jdbcType=VARCHAR},
      </if>
      <if test="currencyNumber != null" >
        currency_number = #{currencyNumber,jdbcType=DECIMAL},
      </if>
      <if test="freezeNumber != null" >
        freeze_number = #{freezeNumber,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="walletAddress != null" >
        wallet_address = #{walletAddress,jdbcType=VARCHAR},
      </if>
      <if test="reserve != null" >
        reserve = #{reserve,jdbcType=VARCHAR},
      </if>
    </set>
    where wallet_id = #{walletId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.contactsImprove.entity.api.UserWallet" >
    update user_wallet
    set user_id = #{userId,jdbcType=BIGINT},
      pay_password = #{payPassword,jdbcType=VARCHAR},
      currency_type = #{currencyType,jdbcType=VARCHAR},
      currency_number = #{currencyNumber,jdbcType=DECIMAL},
      freeze_number = #{freezeNumber,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      wallet_address = #{walletAddress,jdbcType=VARCHAR},
      reserve = #{reserve,jdbcType=VARCHAR}
    where wallet_id = #{walletId,jdbcType=BIGINT}
  </update>
</mapper>