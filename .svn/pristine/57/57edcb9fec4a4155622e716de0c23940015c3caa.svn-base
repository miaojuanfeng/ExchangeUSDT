package com.contactsImprove.waterwheel;

import java.util.List;

import com.contactsImprove.entity.api.MerchantNotify;
import com.contactsImprove.service.api.MerchantNotifyService;
import com.contactsImprove.utils.LoggerUtil;
import com.contactsImprove.utils.NotifyCommercial;

public class Discharged implements Runnable{
	
	byte[] lock=new byte[0];
	
	Integer slotIndex;
	
	boolean isBusy=false;
	
	MerchantNotifyService merchantNotifyService;
	NotifyCommercial notifyCommercial;
	
	public Discharged(MerchantNotifyService merchantNotifyService,NotifyCommercial notifyCommercial) {
		this.merchantNotifyService=merchantNotifyService;
		this.notifyCommercial=notifyCommercial;
	}
	
	public void setSlotIndex(Integer slotIndex) {
		this.slotIndex=slotIndex;
		synchronized(lock) {
			lock.notifyAll();
		}
	}	
	public boolean isBusy() {
		return isBusy;
	}
	
	@Override
	public void run() {		
		while(true) {			
			synchronized(lock) {
				try {
					isBusy=false;
					lock.wait();
					isBusy=true;
					List<MerchantNotify> notifyList=merchantNotifyService.selectBySlotIndex(slotIndex);
					if(notifyList!=null) {
						for(int i=0;i<notifyList.size();i++) {
							MerchantNotify mn=notifyList.get(i);
							notifyCommercial.notifyOrderFinish(mn,mn.getPrivateKey());
						}
					}
					notifyList=null;									
				} catch (InterruptedException e) {
					LoggerUtil.error(e.getMessage(), e);
				}
			}			
		}				
	}
		

}
